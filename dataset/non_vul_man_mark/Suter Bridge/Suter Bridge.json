{
  "contract": "Suter Bridge",
  "source_code_path": "../contracts/",
  "type": "",
  "vulnerable_entry_function": {
    "file": "",
    "name": "",
    "signature": "",
    "lines": "",
    "attack_type": "",
    "vul_reason": "",
    "code_snippet": ""
  },
  "detail": "",
  "blg": {
    "Suter Bridge": {
      "interoperability": "homogeneous",
      "roles": {
        "src_chain": [
          "TokenDeposit1",
          "TokenRedeem2"
        ],
        "rel_chain": [
          "RelayMessage"
        ],
        "det_chain": [
          "TokenWithdraw1",
          "TokenMint2"
        ]
      },
      "src_chain": {
        "chain_name": "Ethereum",
        "events": {
          "TokenDeposit1": {
            "0": {
              "func_name": "transfer",
              "file_name": "CoinSuter.sol",
              "key_ops": [
                "require(_to != address(0));",
                "require(_value <= balances[msg.sender]);",
                "balances[msg.sender] = sub(balances[msg.sender],_value);",
                "balances[_to] = add(balances[_to], _value);"
              ],
              "child": {}
            }
          },
          "TokenRedeem2": {
            "0": {
              "func_name": "transferFrom",
              "file_name": "CoinSuter.sol",
              "key_ops": [
                "require(_to != address(0));",
                "require(_value <= balances[_from]);",
                "require(_value <= allowed[_from][msg.sender]);",
                "balances[_from] = sub(balances[_from], _value);",
                "balances[_to] = add(balances[_to], _value);",
                "allowed[_from][msg.sender] = sub(allowed[_from][msg.sender], _value);"
              ],
              "child": {}
            }
          }
        }
      },
      "rel_chain": {
        "chain_name": "Relay Chain",
        "events": {}
      },
      "det_chain": {
        "chain_name": "Ethereum",
        "events": {
          "TokenWithdraw1": {
            "0": {
              "func_name": "transfer",
              "file_name": "SuterusuToken.sol",
              "key_ops": [
                "require(!isBlacklist(msg.sender), \"Token: caller in blacklist can't transfer\");",
                "require(!isBlacklist(to), \"Token: not allow to transfer to recipient address in blacklist\");",
                "return super.transfer(to, value);"
              ],
              "child": {}
            }
          },
          "TokenMint2": {
            "0": {
              "func_name": "_mint",
              "file_name": "SuterusuToken.sol",
              "key_ops": [
                "require(account != address(0), \"ERC20: mint to the zero address\");",
                "_totalSupply = _totalSupply.add(amount);",
                "_balances[account] = _balances[account].add(amount);"
              ],
              "child": {}
            }
          }
        }
      }
    }
  },
  "cag": []
}