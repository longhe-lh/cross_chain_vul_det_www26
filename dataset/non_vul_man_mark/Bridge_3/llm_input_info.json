{
    "src_chain": {
        "Transfer1": [
            {
                "Burn": "function Burn(\n address to,\n uint256 amount,\n uint256 nonce,\n bytes calldata signature\n ) external {\n transfers[msg.sender] = transfers[msg.sender] + 1;\n token.burn(msg.sender, amount);\n emit Transfer(\n msg.sender,\n to,\n amount,\n block.timestamp,\n nonce,\n signature,\n Type.BURN\n );\n }"
            },
            {
                "burn": "function burn(address _owner, uint256 _amount) external {\n require(msg.sender == bridge, \"Only admin\");\n _burn(_owner, _amount);\n }"
            }
        ]
    },
    "rel_chain": {
        "mint": [
            {
                "Mint": "function Mint(\n address from,\n address to,\n uint256 amount,\n uint256 nonce,\n bytes calldata signature\n ) external {\n bytes32 messageHash = keccak256(abi.encodePacked(to, amount, nonce));\n bytes32 message = ECDSA.toEthSignedMessageHash(messageHash);\n address signer = ECDSA.recover(message, signature);\n require(signer == from, \"incorret Signature\");\n uint256 id = transfers[to];\n hasProcessed[to][id] = true;\n token.mint(to, amount);\n emit Transfer(\n msg.sender,\n to,\n amount,\n block.timestamp,\n nonce,\n signature,\n Type.MINT\n );\n }"
            },
            {
                "mint": "function mint(address _to, uint256 _amount) external {\n require(msg.sender == bridge, \"Only admin\");\n _mint(_to, _amount);\n }"
            }
        ],
        "burn": [
            {
                "Burn": "function Burn(\n address to,\n uint256 amount,\n uint256 nonce,\n bytes calldata signature\n ) external {\n transfers[msg.sender] = transfers[msg.sender] + 1;\n token.burn(msg.sender, amount);\n emit Transfer(\n msg.sender,\n to,\n amount,\n block.timestamp,\n nonce,\n signature,\n Type.BURN\n );\n }"
            },
            {
                "burn": "function burn(address _owner, uint256 _amount) external {\n require(msg.sender == bridge, \"Only admin\");\n _burn(_owner, _amount);\n }"
            }
        ]
    },
    "det_chain": {
        "Transfer1": [
            {
                "Mint": "function Mint(\n address from,\n address to,\n uint256 amount,\n uint256 nonce,\n bytes calldata signature\n ) external {\n bytes32 messageHash = keccak256(abi.encodePacked(to, amount, nonce));\n bytes32 message = ECDSA.toEthSignedMessageHash(messageHash);\n address signer = ECDSA.recover(message, signature);\n require(signer == from, \"incorret Signature\");\n uint256 id = transfers[to];\n hasProcessed[to][id] = true;\n token.mint(to, amount);\n emit Transfer(\n msg.sender,\n to,\n amount,\n block.timestamp,\n nonce,\n signature,\n Type.MINT\n );\n }"
            },
            {
                "mint": "function mint(address _to, uint256 _amount) external {\n require(msg.sender == bridge, \"Only admin\");\n _mint(_to, _amount);\n }"
            }
        ]
    }
}