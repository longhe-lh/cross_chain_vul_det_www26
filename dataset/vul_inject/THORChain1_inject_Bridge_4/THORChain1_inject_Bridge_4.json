{"project": "Bridge_4", "functions": ["function redeem(\n address receiver,\n string memory symbol,\n uint256 amount,\n uint256 nonce,\n uint256 time,\n uint256 chainTo,\n uint8 v,\n bytes32 r,\n bytes32 s\n ) external nonReentrant checkNonce(nonce) TokenSupported(symbol) {\n require(receiver == msg.sender, \"Only receiver can call this function\");\n require(\n chainTo == thisChainId,\n \"This transaction is for another chain\"\n );\n bytes32 signedDataHash = keccak256(\n abi.encodePacked(\n receiver,\n supportedTokens[symbol],\n amount,\n nonce,\n time,\n chainTo\n )\n );\n bytes32 message = signedDataHash.toEthSignedMessageHash();\n address signer = message.recover(v, r, s);\n require(hasRole(VALIDATOR_ROLE, signer), \"Bridge: invalid sig\");\n IERC20(supportedTokens[symbol]).mint(receiver, amount);\n usersNonces[msg.sender][nonce] == true;\n emit RedeemInitilaized(\n receiver,\n supportedTokens[symbol],\n amount,\n nonce\n );\n }", "func (e *ETHScanner) getAssetFromTokenAddress(token string) (common.Asset, error) {\n\tif IsETH(token) {\n\t\treturn common.ETHAsset, nil\n\t}\n\ttokenMeta, err := e.getTokenMeta(token)\n\tif err != nil {\n\t\treturn common.EmptyAsset, fmt.Errorf(\"fail to get token meta: %w\", err)\n\t}\n\tasset := common.ETHAsset\n\tif tokenMeta.Symbol != common.ETHChain.String() {\n\t\tasset, err = common.NewAsset(fmt.Sprintf(\"ETH.%s-%s\", tokenMeta.Symbol, strings.ToUpper(tokenMeta.Address)))\n\t\tif err != nil {\n\t\t\treturn common.EmptyAsset, fmt.Errorf(\"fail to create asset: %w\", err)\n\t\t}\n\t}\n\treturn asset, nil\n}"], "label": "Yes", "detail": "The getAssetFromTokenAddress function in THORChain's Ethereum scanner fails to properly handle ERC20 tokens with 'ETH' symbol. When processing deposits, it defaults to native ETH asset type if the token metadata isn't found in local storage. An attacker can deploy a malicious ERC20 token with 'ETH' symbol, causing the bridge to incorrectly identify the token as native Ethereum. This allows fake tokens to be treated as genuine ETH in cross-chain transactions."}