{"project": "Arbitrum Bridge", "functions": ["function executeCall(\n address to,\n uint256 value,\n bytes calldata data\n ) external returns (bool success, bytes memory returnData) {\n if (!allowedOutboxesMap[msg.sender].allowed)\n revert NotOutbox(msg.sender);\n if (data.length > 0 && !to.isContract()) revert NotContract(to);\n address prevOutbox = _activeOutbox;\n _activeOutbox = msg.sender;\n \n \n \n \n (success, returnData) = to.call{value: value}(data);\n _activeOutbox = prevOutbox;\n emit BridgeCallTriggered(msg.sender, to, value, data);\n }", "function updateSendRoot(bytes32 root, bytes32 l2BlockHash) external {\n if (msg.sender != rollup) revert NotRollup(msg.sender, rollup);\n roots[root] = l2BlockHash;\n emit SendRootUpdated(root, l2BlockHash);\n }", "function anySwapOutUnderlyingWithPermit(\n        address from,\n        address token,\n        address to,\n        uint amount,\n        uint deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s,\n        uint toChainID\n    ) external {\n        address _underlying = AnyswapV1ERC20(token).underlying();\n        IERC20(_underlying).permit(from, address(this), amount, deadline, v, r, s);\n        TransferHelper.safeTransferFrom(_underlying, from, token, amount);\n        AnyswapV1ERC20(token).depositVault(amount, from);\n        _anySwapOut(from, token, to, amount, toChainID);\n    }"], "label": "Yes", "detail": "On February 15, 2023, the AnyswapV4Router contract of Multichain was exploited via a frontrunning MEV bot. The attacker used a crafted transaction to call the anySwapOutUnderlyingWithPermit function before a legitimate user's transaction could execute. The function assumed the underlying token (WETH) supported the ERC-2612 permit interface, but WETH lacked the permit method. Consequently, the fallback deposit function was triggered instead of validating the signature. The attacker then successfully used safeTransferFrom to transfer the WETH to their own address without proper authorization, gaining approximately 87 ETH (~$130,000)."}